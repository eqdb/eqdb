// Copyright (c) 2017, Herman Bergwerf. All rights reserved.
// Use of this source code is governed by an AGPL-3.0-style license
// that can be found in the LICENSE file.

part of eqpg.dbutils;

// PLEASE DO NOT EDIT THIS FILE, THIS CODE IS AUTO-GENERATED.

final descriptorHelper = new TableHelper<table.Descriptor>(
    'descriptor',
    table.Descriptor.mapFormat,
    table.Descriptor.map,
    (result, record) => result.descriptors.add(record));
final subjectHelper = new TableHelper<table.Subject>(
    'subject',
    table.Subject.mapFormat,
    table.Subject.map,
    (result, record) => result.subjects.add(record));
final localeHelper = new TableHelper<table.Locale>(
    'locale',
    table.Locale.mapFormat,
    table.Locale.map,
    (result, record) => result.locales.add(record));
final translationHelper = new TableHelper<table.Translation>(
    'translation',
    table.Translation.mapFormat,
    table.Translation.map,
    (result, record) => result.translations.add(record));
final categoryHelper = new TableHelper<table.Category>(
    'category',
    table.Category.mapFormat,
    table.Category.map,
    (result, record) => result.categories.add(record));
final functionHelper = new TableHelper<table.Function>(
    'function',
    table.Function.mapFormat,
    table.Function.map,
    (result, record) => result.functions.add(record));
final functionSubjectTagHelper = new TableHelper<table.FunctionSubjectTag>(
    'function_subject_tag',
    table.FunctionSubjectTag.mapFormat,
    table.FunctionSubjectTag.map,
    (result, record) => result.functionSubjectTags.add(record));
final operatorConfigurationHelper =
    new TableHelper<table.OperatorConfiguration>(
        'operator_configuration',
        table.OperatorConfiguration.mapFormat,
        table.OperatorConfiguration.map,
        (result, record) => result.operatorConfigurations.add(record));
final expressionHelper = new TableHelper<table.Expression>(
    'expression',
    table.Expression.mapFormat,
    table.Expression.map,
    (result, record) => result.expressions.add(record));
final functionReferenceHelper = new TableHelper<table.FunctionReference>(
    'function_reference',
    table.FunctionReference.mapFormat,
    table.FunctionReference.map,
    (result, record) => result.functionReferences.add(record));
final integerReferenceHelper = new TableHelper<table.IntegerReference>(
    'integer_reference',
    table.IntegerReference.mapFormat,
    table.IntegerReference.map,
    (result, record) => result.integerReferences.add(record));
final lineageHelper = new TableHelper<table.Lineage>(
    'lineage',
    table.Lineage.mapFormat,
    table.Lineage.map,
    (result, record) => result.lineages.add(record));
final ruleHelper = new TableHelper<table.Rule>('rule', table.Rule.mapFormat,
    table.Rule.map, (result, record) => result.rules.add(record));
final definitionHelper = new TableHelper<table.Definition>(
    'definition',
    table.Definition.mapFormat,
    table.Definition.map,
    (result, record) => result.definitions.add(record));

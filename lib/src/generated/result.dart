// Copyright (c) 2017, Herman Bergwerf. All rights reserved.
// Use of this source code is governed by an AGPL-3.0-style license
// that can be found in the LICENSE file.

part of eqpg.dbutils;

// PLEASE DO NOT EDIT THIS FILE, THIS CODE IS AUTO-GENERATED.

class QueryResult {
  List<db.DescriptorRow> descriptor = [];
  List<db.SubjectRow> subject = [];
  List<db.LocaleRow> locale = [];
  List<db.TranslationRow> translation = [];
  List<db.CategoryRow> category = [];
  List<db.FunctionRow> function = [];
  List<db.FunctionSubjectTagRow> functionSubjectTag = [];
  List<db.OperatorRow> operator = [];
  List<db.ExpressionRow> expression = [];
  List<db.FunctionReferenceRow> functionReference = [];
  List<db.IntegerReferenceRow> integerReference = [];
  List<db.LineageRow> lineage = [];
  List<db.RuleRow> rule = [];
  List<db.DefinitionRow> definition = [];

  /// Replace all empty lists with null so that they are removed from the
  /// response JSON.
  void finalize() {
    if (descriptor.isEmpty) {
      descriptor = null;
    }
    if (subject.isEmpty) {
      subject = null;
    }
    if (locale.isEmpty) {
      locale = null;
    }
    if (translation.isEmpty) {
      translation = null;
    }
    if (category.isEmpty) {
      category = null;
    }
    if (function.isEmpty) {
      function = null;
    }
    if (functionSubjectTag.isEmpty) {
      functionSubjectTag = null;
    }
    if (operator.isEmpty) {
      operator = null;
    }
    if (expression.isEmpty) {
      expression = null;
    }
    if (functionReference.isEmpty) {
      functionReference = null;
    }
    if (integerReference.isEmpty) {
      integerReference = null;
    }
    if (lineage.isEmpty) {
      lineage = null;
    }
    if (rule.isEmpty) {
      rule = null;
    }
    if (definition.isEmpty) {
      definition = null;
    }
  }
}

// Copyright (c) 2017, Herman Bergwerf. All rights reserved.
// Use of this source code is governed by an AGPL-3.0-style license
// that can be found in the LICENSE file.

part of eqdb.schema;

// PLEASE DO NOT EDIT THIS FILE, THIS CODE IS AUTO-GENERATED.

final descriptor = new TableInfo<DescriptorRow, SessionData>('descriptor',
    DescriptorRow.select, DescriptorRow.map, (data) => data.descriptorTable);
final subject = new TableInfo<SubjectRow, SessionData>(
    'subject', SubjectRow.select, SubjectRow.map, (data) => data.subjectTable);
final locale = new TableInfo<LocaleRow, SessionData>(
    'locale', LocaleRow.select, LocaleRow.map, (data) => data.localeTable);
final translation = new TableInfo<TranslationRow, SessionData>('translation',
    TranslationRow.select, TranslationRow.map, (data) => data.translationTable);
final category = new TableInfo<CategoryRow, SessionData>('category',
    CategoryRow.select, CategoryRow.map, (data) => data.categoryTable);
final function = new TableInfo<FunctionRow, SessionData>('function',
    FunctionRow.select, FunctionRow.map, (data) => data.functionTable);
final functionSubjectTag = new TableInfo<FunctionSubjectTagRow, SessionData>(
    'function_subject_tag',
    FunctionSubjectTagRow.select,
    FunctionSubjectTagRow.map,
    (data) => data.functionSubjectTagTable);
final operator = new TableInfo<OperatorRow, SessionData>('operator',
    OperatorRow.select, OperatorRow.map, (data) => data.operatorTable);
final expression = new TableInfo<ExpressionRow, SessionData>('expression',
    ExpressionRow.select, ExpressionRow.map, (data) => data.expressionTable);
final rule = new TableInfo<RuleRow, SessionData>(
    'rule', RuleRow.select, RuleRow.map, (data) => data.ruleTable);
final definition = new TableInfo<DefinitionRow, SessionData>('definition',
    DefinitionRow.select, DefinitionRow.map, (data) => data.definitionTable);
final lineageStep = new TableInfo<LineageStepRow, SessionData>('lineage_step',
    LineageStepRow.select, LineageStepRow.map, (data) => data.lineageStepTable);
final lineage = new TableInfo<LineageRow, SessionData>(
    'lineage', LineageRow.select, LineageRow.map, (data) => data.lineageTable);
